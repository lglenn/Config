# vim: sw=2:ts=2

# Set emacs key bindings in line editor
bindkey -e

stty intr ^c

namedir () { $1=$PWD ;  : ~$1 }

DIRSTACKSIZE=10
setopt autopushd pushd_ignore_dups pushdsilent pushdtohome
setopt appendhistory
setopt auto_name_dirs
setopt autocd
setopt histignoredups
setopt magic_equal_subst
setopt extended_glob
setopt correct

setopt listtypes
setopt autolist
setopt automenu
setopt GLOB_SUBST;

alias dh='dirs -v'

ftphosts=();
telnethosts=(localhost)
pinghosts=(localhost google.com)

compctl -k cvscommands + -f cvs
compctl -j -P "%" kill disown bg fg
compctl -S "=" -E + -f export
compctl -u finger mail talk 
compctl -c which whence whereis man
compctl -k ftphosts ftp
compctl -k ftphosts ncftp
compctl -k telnethosts telnet
compctl -k pinghosts ping
compctl -S "." -q -K findpackage java
compctl -S "." -q -K findpackage javap
compctl -S "." -q -K findpackage jdb
compctl -K nswhois whois

# Complete java invocations by converting a.b.c to a/b/c, 
# looking for completions in CLASSPATH, and then converting 
# the resulting filename back to a Java package and/or class
# name.
function findpackage() {
  # Don't complain if there's no match.
  setopt null_glob;

  # clear reply
  set -A reply;

  # convert dots to slashes to convert 
  # a package/class to a path
  set -A tmp ${(s:.:)=1};
  mydir=${(j:/:)=tmp};

  for i in ${(s&:&)=CLASSPATH} 
  do      
    if test -d $i
    then
      for j in $i/$mydir*
      do
        j=${j%.class};
	set -A tmp ${(s:/:)=${j#$i}};
	reply=($reply ${(j:.:)tmp});
      done
    fi
  done
  return;
}

append_path() {
	found="";
	for i in $path
	do
		if [ "$i" = "$1" ]
		then
			found=1;
		fi
	done
	if [ ! "$found" ]
	then
		if [ -d "$1" ]
		then 
			path=($path $1);
		fi
	fi
}

source_file() {
  file="$1";
  comment=${2:="it"};
  if [ -f $file ]
  then
    echo "Sourcing ${file}..."
    . $file
  else
    echo "Couldn't find ${file}, so not sourcing ${comment}..."
  fi
}

#
# umask 
#
umask 002

#
# aliases
#
alias zsh='exec zsh'
alias tat='tmux attach'
alias tats='tmux attach -t'
alias tl='tmux list-sessions'
alias p8='ping 8.8.8.8'
alias pg='ping google.com'
alias p10='ping 10.9.8.1'

#
# prompt
#

autoload -U colors && colors
export PROMPT="%{$fg[green]%}%h:%(#.%{$fg[red]%}.%{$fg[green]%})%n:%{$fg[blue]%}%m%{$fg[green]%}:%?%b:%{$fg[yellow]%}%~%{$fg[green]%}%(!.%{$fg[red]%}#.>) %{$reset_color%}"

#
# editor
#
export EDITOR=vi

export HISTFILE=$HOME/.zsh_history
export HISTSIZE=1000

limit coredumpsize 0

#
# Silliness
#

function table() {
    case "$1" in
        flip)
            echo "（╯°□°）╯︵ ┻━┻ "
            ;;
        set)
            echo "┬─┬﻿ ノ( ゜-゜ノ)"
            ;;
        man)
            echo "(╯°Д°）╯︵ /(.□ . \)"
            ;;
        bear)
            echo "ʕノ•ᴥ•ʔノ ︵ ┻━┻"
            ;;
        jedi)
            echo "(._.) ~ ︵ ┻━┻"
            ;;
        pudgy)
            echo "(ノ ゜Д゜)ノ ︵ ┻━┻"
            ;;
        battle)
            echo "(╯°□°)╯︵ ┻━┻ ︵ ╯(°□° ╯)"
            ;;
        rage)
            echo "‎(ﾉಥ益ಥ）ﾉ﻿ ┻━┻"
            ;;
        herc)
            echo "(/ .□.)\ ︵╰(゜Д゜)╯︵ /(.□. \)"
            ;;
        *)
            echo "Unknown table"
            ;;
    esac
}

# OS-Specific functionality.
case `uname` in
    Darwin)
        ;;
    Linux)
        ;;
esac

hostname=`hostname`;

source_file "$HOME/.local.zshrc" "local zsh setttings";
source_file "$HOME/.local.${hostname}" "host-specific zsh setttings";

## rbenv
if [ -d "$HOME/.rbenv" ]
then
    echo "Initializing rbenv";
    export PATH="$HOME/.rbenv/bin:$PATH"
    eval "$(rbenv init -)"
fi

## Git

alias g=git

## ssh -- stolen from https://www.codyhiar.com/blog/zsh-autocomplete-with-ssh-config-file/

# Highlight the current autocomplete option
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"

# Better SSH/Rsync/SCP Autocomplete
zstyle ':completion:*:(scp|rsync):*' tag-order ' hosts:-ipaddr:ip\ address hosts:-host:host files'
zstyle ':completion:*:(ssh|scp|rsync):*:hosts-host' ignored-patterns '*(.|:)*' loopback ip6-loopback localhost ip6-localhost broadcasthost
zstyle ':completion:*:(ssh|scp|rsync):*:hosts-ipaddr' ignored-patterns '^(<->.<->.<->.<->|(|::)([[:xdigit:].]##:(#c,2))##(|%*))' '127.0.0.<->' '255.255.255.255' '::1' 'fe80::*'

# Allow for autocomplete to be case insensitive
zstyle ':completion:*' matcher-list '' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' \
  '+l:|?=** r:|?=**'

# Initialize the autocompletion
autoload -Uz compinit && compinit -i

